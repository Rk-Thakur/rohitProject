TextField:
    passport number:
    name:
    address:
    expiry date:
    reminder date;
    created date:
Search Button    

    

    SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: family_name,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Family Name / थर',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: permanent_address,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Permanent Address / स्थायी',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: residential_address,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Residental Address / आवासीय',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: personal_number,
              keyboardType: TextInputType.number,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Personal Number / व्यक्तिगत',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: office_number,
              keyboardType: TextInputType.number,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Office Number / कार्यालय',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              keyboardType: TextInputType.datetime,
              decoration: InputDecoration(
                suffixIcon: IconButton(
                    onPressed: () async {
                      DateTime? newDate = await showDatePicker(
                        context: context,
                        initialDate: DateTime.now(),
                        firstDate: DateTime(1900),
                        lastDate: DateTime(2100),
                      );

                      if (newDate == null) {
                        return;
                      }
                      setState(() {
                        dateOfBirth = newDate;
                      });
                    },
                    icon: Icon(Icons.date_range)),
                border: OutlineInputBorder(),
                labelText: ' Date of Birth / जन्म मिति',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: nationality,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Nationality / राष्ट्रियता',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: father_name,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Father Name / बुबाको नाम',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: mother_name,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Mother  Name / आमाको नाम',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: religion,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Religion / धर्म',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: blood_group,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Blood Group / रक्त समूह ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: email,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Email Address / इमेल',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: marital_status,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Marital Status / वैवाहिक स्थिति',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: passport_number,
              keyboardType: TextInputType.number,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Passport No: / राहदानी नं',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: validityofvisa,
              keyboardType: TextInputType.datetime,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: ' Validity of Visa / भिसाको म्याद',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: currentvisatype,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Current Visa Type / भिसा प्रकार',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            Text('Previous Stay in Nepal / अघिल्लो नेपाल बसाइ'),
            ListTile(
              title: Text("Yes"),
              leading: Radio(
                  value: 'Yes',
                  groupValue: previous,
                  onChanged: (value) {
                    setState(() {
                      previous = value.toString();
                    });
                  }),
            ),
            ListTile(
              title: Text("No"),
              leading: Radio(
                  value: 'No',
                  groupValue: previous,
                  onChanged: (value) {
                    setState(() {
                      previous = value.toString();
                    });
                  }),
            ),
            previous == 'Yes'
                ? Container(
                    child: SingleChildScrollView(
                      child: Column(
                        children: [
                          Card(
                            elevation: 5,
                            child: Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                children: [
                                  TextFormField(
                                    validator: (value) {
                                      return value!.isEmpty
                                          ? 'Required / आवश्यक'
                                          : null;
                                    },
                                    controller: visatype,
                                    decoration: InputDecoration(
                                      border: OutlineInputBorder(),
                                      labelText: 'Visa Type / भिसा प्रकार',
                                      labelStyle: TextStyle(
                                        fontSize: labelsize,
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    height: height,
                                  ),
                                  TextFormField(
                                    validator: (value) {
                                      return value!.isEmpty
                                          ? 'Required / आवश्यक'
                                          : null;
                                    },
                                    decoration: InputDecoration(
                                      suffixIcon: IconButton(
                                          onPressed: () async {
                                            DateTime? newDate =
                                                await showDatePicker(
                                                    context: context,
                                                    initialDate: DateTime.now(),
                                                    firstDate: DateTime(1900),
                                                    lastDate: DateTime(2100));

                                            if (newDate == null) {
                                              return;
                                            }
                                            setState(() {
                                              visaduration = newDate;
                                            });
                                          },
                                          icon: Icon(Icons.date_range)),
                                      border: OutlineInputBorder(),
                                      labelText: 'Duration:From / अवधि: देखि ',
                                      labelStyle: TextStyle(
                                        fontSize: labelsize,
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    height: height,
                                  ),
                                  TextFormField(
                                    validator: (value) {
                                      return value!.isEmpty
                                          ? 'Required / आवश्यक'
                                          : null;
                                    },
                                    decoration: InputDecoration(
                                      suffixIcon: IconButton(
                                          onPressed: () async {
                                            DateTime? newDate =
                                                await showDatePicker(
                                                    context: context,
                                                    initialDate: DateTime.now(),
                                                    firstDate: DateTime(1900),
                                                    lastDate: DateTime(2100));

                                            if (newDate == null) {
                                              return;
                                            }
                                            setState(() {
                                              visato = newDate;
                                            });
                                          },
                                          icon: Icon(Icons.date_range)),
                                      border: OutlineInputBorder(),
                                      labelText: 'To / सम्म',
                                      labelStyle: TextStyle(
                                        fontSize: labelsize,
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    height: height,
                                  ),
                                  TextFormField(
                                    validator: (value) {
                                      return value!.isEmpty
                                          ? 'Required / आवश्यक'
                                          : null;
                                    },
                                    controller: working_organization,
                                    decoration: InputDecoration(
                                      border: OutlineInputBorder(),
                                      labelText:
                                          'Organization,if working visa / संगठन ',
                                      labelStyle: TextStyle(
                                        fontSize: labelsize,
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    height: height,
                                  ),
                                  TextFormField(
                                    validator: (value) {
                                      return value!.isEmpty
                                          ? 'Required / आवश्यक'
                                          : null;
                                    },
                                    controller: remarks,
                                    decoration: InputDecoration(
                                      border: OutlineInputBorder(),
                                      labelText: 'कैफियत',
                                      labelStyle: TextStyle(
                                        fontSize: labelsize,
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    height: height,
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  )
                : Container(),
            Card(
              elevation: 5,
              child: Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  children: [
                    SizedBox(
                      height: height,
                    ),
                    TextFormField(
                      validator: (value) {
                        return value!.isEmpty ? 'Required / आवश्यक' : null;
                      },
                      controller: degree,
                      decoration: InputDecoration(
                        border: OutlineInputBorder(),
                        labelText: 'Degree / डिग्री',
                        labelStyle: TextStyle(
                          fontSize: labelsize,
                        ),
                      ),
                    ),
                    SizedBox(
                      height: height,
                    ),
                    TextFormField(
                      validator: (value) {
                        return value!.isEmpty ? 'Required / आवश्यक' : null;
                      },
                      controller: university,
                      decoration: InputDecoration(
                        border: OutlineInputBorder(),
                        labelText: 'University/College (विश्वविद्यालय / कलेज)',
                        labelStyle: TextStyle(
                          fontSize: labelsize,
                        ),
                      ),
                    ),
                    SizedBox(
                      height: height,
                    ),
                    TextFormField(
                      validator: (value) {
                        return value!.isEmpty ? 'Required / आवश्यक' : null;
                      },
                      controller: division,
                      decoration: InputDecoration(
                        border: OutlineInputBorder(),
                        labelText: 'Division/Rank (श्रेणी)',
                        labelStyle: TextStyle(
                          fontSize: labelsize,
                        ),
                      ),
                    ),
                    SizedBox(
                      height: height,
                    ),
                    TextFormField(
                      validator: (value) {
                        return value!.isEmpty ? 'Required / आवश्यक' : null;
                      },
                      controller: passedyear,
                      keyboardType: TextInputType.datetime,
                      decoration: InputDecoration(
                        suffixIcon: IconButton(
                            onPressed: () async {
                              DateTime? newDate = await showDatePicker(
                                  context: context,
                                  initialDate: visaduration,
                                  firstDate: DateTime(1900),
                                  lastDate: DateTime.now());

                              if (newDate == null) {
                                return;
                              }
                              setState(() {
                                passedYear = newDate;
                              });
                            },
                            icon: Icon(Icons.date_range)),
                        border: OutlineInputBorder(),
                        labelText: 'Passed Year / उत्तीर्ण वर्ष',
                        labelStyle: TextStyle(
                          fontSize: labelsize,
                        ),
                      ),
                    ),
                    SizedBox(
                      height: height,
                    ),
                    // Align(
                    //     alignment: Alignment.bottomRight,
                    //     child: ElevatedButton(
                    //         onPressed: () {}, child: Text("More")))
                  ],
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: nameOfOrganization,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Name of Organization /  कार्यालयको नाम ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: addressOfOrganization,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Address of Organization / कार्यालयको ठेगाना  ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: designation,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Designation / दर्जा ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: contactNumberofOrganization,
              keyboardType: TextInputType.number,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText:
                    'Contact Number of Organization / कार्यालयको सम्पर्क नं. ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: contactEmailOfOrganization,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText:
                    'Contact Email of Organization / कार्यालयको सम्पर्क ईमेल ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: focalPersonOfOrganization,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText:
                    'Focal Person of Organization  / कार्यालयको सम्पर्क व्यक्ति ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: telephone,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText:
                    'Telephone No. Contact Person / सम्पर्क व्यक्तिको टेलिफोन नं.',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: referenceName,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Reference Name / सन्दर्भ नाम',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),
            TextFormField(
              validator: (value) {
                return value!.isEmpty ? 'Required / आवश्यक' : null;
              },
              controller: referenceNumber,
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Reference Number / सन्दर्भ नम्बर ',
                labelStyle: TextStyle(
                  fontSize: labelsize,
                ),
              ),
            ),
            SizedBox(
              height: height,
            ),